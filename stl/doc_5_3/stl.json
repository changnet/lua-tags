[{"url":"","name":"_G","type":3,"desc":"A global variable (not a function) that\nholds the global environment (see <a href=\"#2.2\">&sect;2.2</a>).\nLua itself does not use this variable;\nchanging its value does not affect any environment,\nnor vice versa."},{"url":"","name":"_VERSION","type":3,"desc":"A global variable (not a function) that\nholds a string containing the running Lua version.\nThe current value of this variable is \"<code>Lua 5.3</code>\"."},{"url":"","name":"assert","type":12,"desc":"Calls <a href=\"#pdf-error\"><code>error</code></a> if\nthe value of its argument <code>v</code> is false (i.e., <b>nil</b> or <b>false</b>);\notherwise, returns all its arguments.\nIn case of error,\n<code>message</code> is the error object;\nwhen absent, it defaults to \"<code>assertion failed!</code>\"","args":["v","message"]},{"url":"","name":"collectgarbage","type":12,"desc":"This function is a generic interface to the garbage collector.\nIt performs different functions according to its first argument, <code>opt</code>:\n\n<ul","args":["opt","arg"]},{"url":"","name":"dofile","type":12,"desc":"Opens the named file and executes its contents as a Lua chunk.\nWhen called without arguments,\n<code>dofile</code> executes the contents of the standard input (<code>stdin</code>).\nReturns all values returned by the chunk.\nIn case of errors, <code>dofile</code> propagates the error\nto its caller (that is, <code>dofile</code> does not run in protected mode).","args":["filename"]},{"url":"","name":"error","type":12,"desc":"Terminates the last protected function called\nand returns <code>message</code> as the error object.\nFunction <code>error</code> never returns.","args":["message","level"]},{"url":"","name":"getmetatable","type":12,"desc":"If <code>object</code> does not have a metatable, returns <b>nil</b>.\nOtherwise,\nif the object's metatable has a <code>__metatable</code> field,\nreturns the associated value.\nOtherwise, returns the metatable of the given object.","args":["object"]},{"url":"","name":"ipairs","type":12,"desc":"Returns three values (an iterator function, the table <code>t</code>, and 0)\nso that the construction\n\n<pre>\n     for i,v in ipairs(t) do <em>body</em> end\n</pre><p>\nwill iterate over the key&ndash;value pairs\n(<code>1,t[1]</code>), (<code>2,t[2]</code>), ...,\nup to the first nil value","args":["t"]},{"url":"","name":"load","type":12,"desc":"Loads a chunk.","args":["chunk","chunkname","mode","env"]},{"url":"","name":"loadfile","type":12,"desc":"Similar to <a href=\"#pdf-load\"><code>load</code></a>,\nbut gets the chunk from file <code>filename</code>\nor from the standard input,\nif no file name is given.","args":["filename","mode","env"]},{"url":"","name":"next","type":12,"desc":"Allows a program to traverse all fields of a table.\nIts first argument is a table and its second argument\nis an index in this table.\n<code>next</code> returns the next index of the table\nand its associated value.\nWhen called with <b>nil</b> as its second argument,\n<code>next</code> returns an initial index\nand its associated value.\nWhen called with the last index,\nor with <b>nil</b> in an empty table,\n<code>next</code> returns <b>nil</b>.\nIf the second argument is absent, then it is interpreted as <b>nil</b>.\nIn particular,\nyou can use <code>next(t)</code> to check whether a table is empty.","args":["table","index"]},{"url":"","name":"pairs","type":12,"desc":"If <code>t</code> has a metamethod <code>__pairs</code>,\ncalls it with <code>t</code> as argument and returns the first three\nresults from the call.","args":["t"]},{"url":"","name":"pcall","type":12,"desc":"Calls function <code>f</code> with\nthe given arguments in <em>protected mode</em>.\nThis means that any error inside&nbsp;<code>f</code> is not propagated;\ninstead, <code>pcall</code> catches the error\nand returns a status code.\nIts first result is the status code (a boolean),\nwhich is true if the call succeeds without errors.\nIn such case, <code>pcall</code> also returns all results from the call,\nafter this first result.\nIn case of any error, <code>pcall</code> returns <b>false</b> plus the error message.","args":["f","arg1","..."]},{"url":"","name":"print","type":12,"desc":"Receives any number of arguments\nand prints their values to <code>stdout</code>,\nusing the <a href=\"#pdf-tostring\"><code>tostring</code></a> function to convert each argument to a string.\n<code>print</code> is not intended for formatted output,\nbut only as a quick way to show a value,\nfor instance for debugging.\nFor complete control over the output,\nuse <a href=\"#pdf-string.format\"><code>string.format</code></a> and <a href=\"#pdf-io.write\"><code>io.write</code></a>.","args":["..."]},{"url":"","name":"rawequal","type":12,"desc":"Checks whether <code>v1</code> is equal to <code>v2</code>,\nwithout invoking the <code>__eq</code> metamethod.\nReturns a boolean.","args":["v1","v2"]},{"url":"","name":"rawget","type":12,"desc":"Gets the real value of <code>table[index]</code>,\nwithout invoking the <code>__index</code> metamethod.\n<code>table</code> must be a table;\n<code>index</code> may be any value.","args":["table","index"]},{"url":"","name":"rawlen","type":12,"desc":"Returns the length of the object <code>v</code>,\nwhich must be a table or a string,\nwithout invoking the <code>__len</code> metamethod.\nReturns an integer.","args":["v"]},{"url":"","name":"rawset","type":12,"desc":"Sets the real value of <code>table[index]</code> to <code>value</code>,\nwithout invoking the <code>__newindex</code> metamethod.\n<code>table</code> must be a table,\n<code>index</code> any value different from <b>nil</b> and NaN,\nand <code>value</code> any Lua value.","args":["table","index","value"]},{"url":"","name":"require","type":12,"desc":"Loads the given module.\nThe function starts by looking into the <a href=\"#pdf-package.loaded\"><code>package.loaded</code></a> table\nto determine whether <code>modname</code> is already loaded.\nIf it is, then <code>require</code> returns the value stored\nat <code>package.loaded[modname]</code>.\nOtherwise, it tries to find a <em>loader</em> for the module.","args":["modname"]},{"url":"","name":"select","type":12,"desc":"If <code>index</code> is a number,\nreturns all arguments after argument number <code>index</code>;\na negative number indexes from the end (-1 is the last argument).\nOtherwise, <code>index</code> must be the string <code>\"#\"</code>,\nand <code>select</code> returns the total number of extra arguments it received.","args":["index","..."]},{"url":"","name":"setmetatable","type":12,"desc":"Sets the metatable for the given table.\n(To change the metatable of other types from Lua code,\nyou must use the debug library (<a href=\"#6.10\">&sect;6.10</a>).)\nIf <code>metatable</code> is <b>nil</b>,\nremoves the metatable of the given table.\nIf the original metatable has a <code>__metatable</code> field,\nraises an error.","args":["table","metatable"]},{"url":"","name":"tonumber","type":12,"desc":"When called with no <code>base</code>,\n<code>tonumber</code> tries to convert its argument to a number.\nIf the argument is already a number or\na string convertible to a number,\nthen <code>tonumber</code> returns this number;\notherwise, it returns <b>nil</b>.","args":["e","base"]},{"url":"","name":"tostring","type":12,"desc":"Receives a value of any type and\nconverts it to a string in a human-readable format.\n(For complete control of how numbers are converted,\nuse <a href=\"#pdf-string.format\"><code>string.format</code></a>.)","args":["v"]},{"url":"","name":"type","type":12,"desc":"Returns the type of its only argument, coded as a string.\nThe possible results of this function are\n\"<code>nil</code>\" (a string, not the value <b>nil</b>),\n\"<code>number</code>\",\n\"<code>string</code>\",\n\"<code>boolean</code>\",\n\"<code>table</code>\",\n\"<code>function</code>\",\n\"<code>thread</code>\",\nand \"<code>userdata</code>\".","args":["v"]},{"url":"","name":"xpcall","type":12,"desc":"This function is similar to <a href=\"#pdf-pcall\"><code>pcall</code></a>,\nexcept that it sets a new message handler <code>msgh</code>.","args":["f","msgh","arg1","..."]},{"url":"","name":"coroutine","type":3,"desc":"This library comprises the operations to manipulate coroutines,\nwhich come inside the table <a name=\"pdf-coroutine\"><code>coroutine</code></a>.\nSee <a href=\"#2.6\">&sect;2.6</a> for a general description of coroutines."},{"url":"","name":"coroutine.create","type":12,"desc":"Creates a new coroutine, with body <code>f</code>.\n<code>f</code> must be a function.\nReturns this new coroutine,\nan object with type <code>\"thread\"</code>.","args":["f"]},{"url":"","name":"coroutine.isyieldable","type":12,"desc":"Returns true when the running coroutine can yield.","args":[""]},{"url":"","name":"coroutine.resume","type":12,"desc":"Starts or continues the execution of coroutine <code>co</code>.\nThe first time you resume a coroutine,\nit starts running its body.\nThe values <code>val1</code>, ... are passed\nas the arguments to the body function.\nIf the coroutine has yielded,\n<code>resume</code> restarts it;\nthe values <code>val1</code>, ... are passed\nas the results from the yield.","args":["co","val1","..."]},{"url":"","name":"coroutine.running","type":12,"desc":"Returns the running coroutine plus a boolean,\ntrue when the running coroutine is the main one.","args":[""]},{"url":"","name":"coroutine.status","type":12,"desc":"Returns the status of coroutine <code>co</code>, as a string:\n<code>\"running\"</code>,\nif the coroutine is running (that is, it called <code>status</code>);\n<code>\"suspended\"</code>, if the coroutine is suspended in a call to <code>yield</code>,\nor if it has not started running yet;\n<code>\"normal\"</code> if the coroutine is active but not running\n(that is, it has resumed another coroutine);\nand <code>\"dead\"</code> if the coroutine has finished its body function,\nor if it has stopped with an error.","args":["co"]},{"url":"","name":"coroutine.wrap","type":12,"desc":"Creates a new coroutine, with body <code>f</code>.\n<code>f</code> must be a function.\nReturns a function that resumes the coroutine each time it is called.\nAny arguments passed to the function behave as the\nextra arguments to <code>resume</code>.\nReturns the same values returned by <code>resume</code>,\nexcept the first boolean.\nIn case of error, propagates the error.","args":["f"]},{"url":"","name":"coroutine.yield","type":12,"desc":"Suspends the execution of the calling coroutine.\nAny arguments to <code>yield</code> are passed as extra results to <code>resume</code>.","args":["..."]},{"url":"","name":"debug","type":3,"desc":"This library provides\nthe functionality of the debug interface (<a href=\"#4.9\">&sect;4.9</a>) to Lua programs.\nYou should exert care when using this library.\nSeveral of its functions\nviolate basic assumptions about Lua code\n(e.g., that variables local to a function\ncannot be accessed from outside;\nthat userdata metatables cannot be changed by Lua code;\nthat Lua programs do not crash)\nand therefore can compromise otherwise secure code.\nMoreover, some functions in this library may be slow."},{"url":"","name":"debug.debug","type":12,"desc":"Enters an interactive mode with the user,\nrunning each string that the user enters.\nUsing simple commands and other debug facilities,\nthe user can inspect global and local variables,\nchange their values, evaluate expressions, and so on.\nA line containing only the word <code>cont</code> finishes this function,\nso that the caller continues its execution.","args":[""]},{"url":"","name":"debug.gethook","type":12,"desc":"Returns the current hook settings of the thread, as three values:\nthe current hook function, the current hook mask,\nand the current hook count\n(as set by the <a href=\"#pdf-debug.sethook\"><code>debug.sethook</code></a> function).","args":["thread"]},{"url":"","name":"debug.getinfo","type":12,"desc":"Returns a table with information about a function.\nYou can give the function directly\nor you can give a number as the value of <code>f</code>,\nwhich means the function running at level <code>f</code> of the call stack\nof the given thread:\nlevel&nbsp;0 is the current function (<code>getinfo</code> itself);\nlevel&nbsp;1 is the function that called <code>getinfo</code>\n(except for tail calls, which do not count on the stack);\nand so on.\nIf <code>f</code> is a number larger than the number of active functions,\nthen <code>getinfo</code> returns <b>nil</b>.","args":["thread","f","what"]},{"url":"","name":"debug.getlocal","type":12,"desc":"This function returns the name and the value of the local variable\nwith index <code>local</code> of the function at level <code>f</code> of the stack.\nThis function accesses not only explicit local variables,\nbut also parameters, temporaries, etc.","args":["thread","f","local"]},{"url":"","name":"debug.getmetatable","type":12,"desc":"Returns the metatable of the given <code>value</code>\nor <b>nil</b> if it does not have a metatable.","args":["value"]},{"url":"","name":"debug.getregistry","type":12,"desc":"Returns the registry table (see <a href=\"#4.5\">&sect;4.5</a>).","args":[""]},{"url":"","name":"debug.getupvalue","type":12,"desc":"This function returns the name and the value of the upvalue\nwith index <code>up</code> of the function <code>f</code>.\nThe function returns <b>nil</b> if there is no upvalue with the given index.","args":["f","up"]},{"url":"","name":"debug.getuservalue","type":12,"desc":"Returns the Lua value associated to <code>u</code>.\nIf <code>u</code> is not a full userdata,\nreturns <b>nil</b>.","args":["u"]},{"url":"","name":"debug.sethook","type":12,"desc":"Sets the given function as a hook.\nThe string <code>mask</code> and the number <code>count</code> describe\nwhen the hook will be called.\nThe string mask may have any combination of the following characters,\nwith the given meaning:\n\n<ul>\n<li><b>'<code>c</code>': </b> the hook is called every time Lua calls a function;</li>\n<li><b>'<code>r</code>': </b> the hook is called every time Lua returns from a function;</li>\n<li><b>'<code>l</code>': </b> the hook is called every time Lua enters a new line of code.</li>\n</ul><p>\nMoreover,\nwith a <code>count</code> different from zero,\nthe hook is called also after every <code>count</code> instructions","args":["thread","hook","mask","count"]},{"url":"","name":"debug.setlocal","type":12,"desc":"This function assigns the value <code>value</code> to the local variable\nwith index <code>local</code> of the function at level <code>level</code> of the stack.\nThe function returns <b>nil</b> if there is no local\nvariable with the given index,\nand raises an error when called with a <code>level</code> out of range.\n(You can call <code>getinfo</code> to check whether the level is valid.)\nOtherwise, it returns the name of the local variable.","args":["thread","level","local","value"]},{"url":"","name":"debug.setmetatable","type":12,"desc":"Sets the metatable for the given <code>value</code> to the given <code>table</code>\n(which can be <b>nil</b>).\nReturns <code>value</code>.","args":["value","table"]},{"url":"","name":"debug.setupvalue","type":12,"desc":"This function assigns the value <code>value</code> to the upvalue\nwith index <code>up</code> of the function <code>f</code>.\nThe function returns <b>nil</b> if there is no upvalue\nwith the given index.\nOtherwise, it returns the name of the upvalue.","args":["f","up","value"]},{"url":"","name":"debug.setuservalue","type":12,"desc":"Sets the given <code>value</code> as\nthe Lua value associated to the given <code>udata</code>.\n<code>udata</code> must be a full userdata.","args":["udata","value"]},{"url":"","name":"debug.traceback","type":12,"desc":"If <code>message</code> is present but is neither a string nor <b>nil</b>,\nthis function returns <code>message</code> without further processing.\nOtherwise,\nit returns a string with a traceback of the call stack.\nThe optional <code>message</code> string is appended\nat the beginning of the traceback.\nAn optional <code>level</code> number tells at which level\nto start the traceback\n(default is 1, the function calling <code>traceback</code>).","args":["thread","message","level"]},{"url":"","name":"debug.upvalueid","type":12,"desc":"Returns a unique identifier (as a light userdata)\nfor the upvalue numbered <code>n</code>\nfrom the given function.","args":["f","n"]},{"url":"","name":"debug.upvaluejoin","type":12,"desc":"Make the <code>n1</code>-th upvalue of the Lua closure <code>f1</code>\nrefer to the <code>n2</code>-th upvalue of the Lua closure <code>f2</code>.","args":["f1","n1","f2","n2"]},{"url":"","name":"io","type":3,"desc":"The I/O library provides two different styles for file manipulation.\nThe first one uses implicit file handles;\nthat is, there are operations to set a default input file and a\ndefault output file,\nand all input/output operations are over these default files.\nThe second style uses explicit file handles."},{"url":"","name":"io.close","type":12,"desc":"Equivalent to <code>file:close()</code>.\nWithout a <code>file</code>, closes the default output file.","args":["file"]},{"url":"","name":"io.flush","type":12,"desc":"Equivalent to <code>io.output():flush()</code>.","args":[""]},{"url":"","name":"io.input","type":12,"desc":"When called with a file name, it opens the named file (in text mode),\nand sets its handle as the default input file.\nWhen called with a file handle,\nit simply sets this file handle as the default input file.\nWhen called without arguments,\nit returns the current default input file.","args":["file"]},{"url":"","name":"io.lines","type":12,"desc":"Opens the given file name in read mode\nand returns an iterator function that\nworks like <code>file:lines(&middot;&middot;&middot;)</code> over the opened file.\nWhen the iterator function detects the end of file,\nit returns no values (to finish the loop) and automatically closes the file.","args":["filename","..."]},{"url":"","name":"io.open","type":12,"desc":"This function opens a file,\nin the mode specified in the string <code>mode</code>.\nIn case of success,\nit returns a new file handle.","args":["filename","mode"]},{"url":"","name":"io.output","type":12,"desc":"Similar to <a href=\"#pdf-io.input\"><code>io.input</code></a>, but operates over the default output file.","args":["file"]},{"url":"","name":"io.popen","type":12,"desc":"This function is system dependent and is not available\non all platforms.","args":["prog","mode"]},{"url":"","name":"io.read","type":12,"desc":"Equivalent to <code>io.input():read(&middot;&middot;&middot;)</code>.","args":["..."]},{"url":"","name":"io.tmpfile","type":12,"desc":"In case of success,\nreturns a handle for a temporary file.\nThis file is opened in update mode\nand it is automatically removed when the program ends.","args":[""]},{"url":"","name":"io.type","type":12,"desc":"Checks whether <code>obj</code> is a valid file handle.\nReturns the string <code>\"file\"</code> if <code>obj</code> is an open file handle,\n<code>\"closed file\"</code> if <code>obj</code> is a closed file handle,\nor <b>nil</b> if <code>obj</code> is not a file handle.","args":["obj"]},{"url":"","name":"io.write","type":12,"desc":"Equivalent to <code>io.output():write(&middot;&middot;&middot;)</code>.","args":["..."]},{"url":"","name":"file:close","type":12,"desc":"Closes <code>file</code>.\nNote that files are automatically closed when\ntheir handles are garbage collected,\nbut that takes an unpredictable amount of time to happen.","args":[""]},{"url":"","name":"file:flush","type":12,"desc":"Saves any written data to <code>file</code>.","args":[""]},{"url":"","name":"file:lines","type":12,"desc":"Returns an iterator function that,\neach time it is called,\nreads the file according to the given formats.\nWhen no format is given,\nuses \"<code>l</code>\" as a default.\nAs an example, the construction\n\n<pre>\n     for c in file:lines(1) do <em>body</em> end\n</pre><p>\nwill iterate over all characters of the file,\nstarting at the current position.\nUnlike <a href=\"#pdf-io.lines\"><code>io.lines</code></a>, this function does not close the file\nwhen the loop ends","args":["..."]},{"url":"","name":"file:read","type":12,"desc":"Reads the file <code>file</code>,\naccording to the given formats, which specify what to read.\nFor each format,\nthe function returns a string or a number with the characters read,\nor <b>nil</b> if it cannot read data with the specified format.\n(In this latter case,\nthe function does not read subsequent formats.)\nWhen called without formats,\nit uses a default format that reads the next line\n(see below).","args":["..."]},{"url":"","name":"file:seek","type":12,"desc":"Sets and gets the file position,\nmeasured from the beginning of the file,\nto the position given by <code>offset</code> plus a base\nspecified by the string <code>whence</code>, as follows:\n\n<ul>\n<li><b>\"<code>set</code>\": </b> base is position 0 (beginning of the file);</li>\n<li><b>\"<code>cur</code>\": </b> base is current position;</li>\n<li><b>\"<code>end</code>\": </b> base is end of file;</li>\n</ul><p>\nIn case of success, <code>seek</code> returns the final file position,\nmeasured in bytes from the beginning of the file.\nIf <code>seek</code> fails, it returns <b>nil</b>,\nplus a string describing the error","args":["whence","offset"]},{"url":"","name":"file:setvbuf","type":12,"desc":"Sets the buffering mode for an output file.\nThere are three available modes:\n\n<ul","args":["mode","size"]},{"url":"","name":"file:write","type":12,"desc":"Writes the value of each of its arguments to <code>file</code>.\nThe arguments must be strings or numbers.","args":["..."]},{"url":"","name":"math","type":3,"desc":"This library provides basic mathematical functions.\nIt provides all its functions and constants inside the table <a name=\"pdf-math\"><code>math</code></a>.\nFunctions with the annotation \"<code>integer/float</code>\" give\ninteger results for integer arguments\nand float results for float (or mixed) arguments.\nRounding functions\n(<a href=\"#pdf-math.ceil\"><code>math.ceil</code></a>, <a href=\"#pdf-math.floor\"><code>math.floor</code></a>, and <a href=\"#pdf-math.modf\"><code>math.modf</code></a>)\nreturn an integer when the result fits in the range of an integer,\nor a float otherwise."},{"url":"","name":"math.abs","type":12,"desc":"Returns the absolute value of <code>x</code>. (integer/float)","args":["x"]},{"url":"","name":"math.acos","type":12,"desc":"Returns the arc cosine of <code>x</code> (in radians).","args":["x"]},{"url":"","name":"math.asin","type":12,"desc":"Returns the arc sine of <code>x</code> (in radians).","args":["x"]},{"url":"","name":"math.atan","type":12,"desc":"\nReturns the arc tangent of <code>y/x</code> (in radians),\nbut uses the signs of both arguments to find the\nquadrant of the result.\n(It also handles correctly the case of <code>x</code> being zero.","args":["y","x"]},{"url":"","name":"math.ceil","type":12,"desc":"Returns the smallest integral value larger than or equal to <code>x</code>.","args":["x"]},{"url":"","name":"math.cos","type":12,"desc":"Returns the cosine of <code>x</code> (assumed to be in radians).","args":["x"]},{"url":"","name":"math.deg","type":12,"desc":"Converts the angle <code>x</code> from radians to degrees.","args":["x"]},{"url":"","name":"math.exp","type":12,"desc":"Returns the value <em>e<sup>x</sup></em>\n(where <code>e</code> is the base of natural logarithms).","args":["x"]},{"url":"","name":"math.floor","type":12,"desc":"Returns the largest integral value smaller than or equal to <code>x</code>.","args":["x"]},{"url":"","name":"math.fmod","type":12,"desc":"Returns the remainder of the division of <code>x</code> by <code>y</code>\nthat rounds the quotient towards zero. (integer/float)","args":["x","y"]},{"url":"","name":"math.huge","type":3,"desc":"The float value <code>HUGE_VAL</code>,\na value larger than any other numeric value."},{"url":"","name":"math.log","type":12,"desc":"Returns the logarithm of <code>x</code> in the given base.\nThe default for <code>base</code> is <em>e</em>\n(so that the function returns the natural logarithm of <code>x</code>).","args":["x","base"]},{"url":"","name":"math.max","type":12,"desc":"Returns the argument with the maximum value,\naccording to the Lua operator <code>&lt;</code>. (integer/float)","args":["x","..."]},{"url":"","name":"math.maxinteger","type":3,"desc":"An integer with the maximum value for an integer."},{"url":"","name":"math.min","type":12,"desc":"Returns the argument with the minimum value,\naccording to the Lua operator <code>&lt;</code>. (integer/float)","args":["x","..."]},{"url":"","name":"math.mininteger","type":3,"desc":"An integer with the minimum value for an integer."},{"url":"","name":"math.modf","type":12,"desc":"Returns the integral part of <code>x</code> and the fractional part of <code>x</code>.\nIts second result is always a float.","args":["x"]},{"url":"","name":"math.pi","type":3,"desc":"The value of <em>&pi;</em>."},{"url":"","name":"math.rad","type":12,"desc":"Converts the angle <code>x</code> from degrees to radians.","args":["x"]},{"url":"","name":"math.random","type":12,"desc":"When called without arguments,\nreturns a pseudo-random float with uniform distribution\nin the range  <em>[0,1)</em>.  \nWhen called with two integers <code>m</code> and <code>n</code>,\n<code>math.random</code> returns a pseudo-random integer\nwith uniform distribution in the range <em>[m, n]</em>.\n(The value <em>n-m</em> cannot be negative and must fit in a Lua integer.)\nThe call <code>math.random(n)</code> is equivalent to <code>math.random(1,n)</code>.","args":["m","n"]},{"url":"","name":"math.randomseed","type":12,"desc":"Sets <code>x</code> as the \"seed\"\nfor the pseudo-random generator:\nequal seeds produce equal sequences of numbers.","args":["x"]},{"url":"","name":"math.sin","type":12,"desc":"Returns the sine of <code>x</code> (assumed to be in radians).","args":["x"]},{"url":"","name":"math.sqrt","type":12,"desc":"Returns the square root of <code>x</code>.\n(You can also use the expression <code>x^0.5</code> to compute this value.)","args":["x"]},{"url":"","name":"math.tan","type":12,"desc":"Returns the tangent of <code>x</code> (assumed to be in radians).","args":["x"]},{"url":"","name":"math.tointeger","type":12,"desc":"If the value <code>x</code> is convertible to an integer,\nreturns that integer.\nOtherwise, returns <b>nil</b>.","args":["x"]},{"url":"","name":"math.type","type":12,"desc":"Returns \"<code>integer</code>\" if <code>x</code> is an integer,\n\"<code>float</code>\" if it is a float,\nor <b>nil</b> if <code>x</code> is not a number.","args":["x"]},{"url":"","name":"math.ult","type":12,"desc":"Returns a boolean,\ntrue if and only if integer <code>m</code> is below integer <code>n</code> when\nthey are compared as unsigned integers.","args":["m","n"]},{"url":"","name":"os","type":3,"desc":"This library is implemented through table <a name=\"pdf-os\"><code>os</code></a>."},{"url":"","name":"os.clock","type":12,"desc":"Returns an approximation of the amount in seconds of CPU time\nused by the program.","args":[""]},{"url":"","name":"os.date","type":12,"desc":"Returns a string or a table containing date and time,\nformatted according to the given string <code>format</code>.","args":["format","time"]},{"url":"","name":"os.difftime","type":12,"desc":"Returns the difference, in seconds,\nfrom time <code>t1</code> to time <code>t2</code>\n(where the times are values returned by <a href=\"#pdf-os.time\"><code>os.time</code></a>).\nIn POSIX, Windows, and some other systems,\nthis value is exactly <code>t2</code><em>-</em><code>t1</code>.","args":["t2","t1"]},{"url":"","name":"os.execute","type":12,"desc":"This function is equivalent to the ISO&nbsp;C function <code>system</code>.\nIt passes <code>command</code> to be executed by an operating system shell.\nIts first result is <b>true</b>\nif the command terminated successfully,\nor <b>nil</b> otherwise.\nAfter this first result\nthe function returns a string plus a number,\nas follows:\n\n<ul","args":["command"]},{"url":"","name":"os.exit","type":12,"desc":"Calls the ISO&nbsp;C function <code>exit</code> to terminate the host program.\nIf <code>code</code> is <b>true</b>,\nthe returned status is <code>EXIT_SUCCESS</code>;\nif <code>code</code> is <b>false</b>,\nthe returned status is <code>EXIT_FAILURE</code>;\nif <code>code</code> is a number,\nthe returned status is this number.\nThe default value for <code>code</code> is <b>true</b>.","args":["code","close"]},{"url":"","name":"os.getenv","type":12,"desc":"Returns the value of the process environment variable <code>varname</code>,\nor <b>nil</b> if the variable is not defined.","args":["varname"]},{"url":"","name":"os.remove","type":12,"desc":"Deletes the file (or empty directory, on POSIX systems)\nwith the given name.\nIf this function fails, it returns <b>nil</b>,\nplus a string describing the error and the error code.\nOtherwise, it returns true.","args":["filename"]},{"url":"","name":"os.rename","type":12,"desc":"Renames the file or directory named <code>oldname</code> to <code>newname</code>.\nIf this function fails, it returns <b>nil</b>,\nplus a string describing the error and the error code.\nOtherwise, it returns true.","args":["oldname","newname"]},{"url":"","name":"os.setlocale","type":12,"desc":"Sets the current locale of the program.\n<code>locale</code> is a system-dependent string specifying a locale;\n<code>category</code> is an optional string describing which category to change:\n<code>\"all\"</code>, <code>\"collate\"</code>, <code>\"ctype\"</code>,\n<code>\"monetary\"</code>, <code>\"numeric\"</code>, or <code>\"time\"</code>;\nthe default category is <code>\"all\"</code>.\nThe function returns the name of the new locale,\nor <b>nil</b> if the request cannot be honored.","args":["locale","category"]},{"url":"","name":"os.time","type":12,"desc":"Returns the current time when called without arguments,\nor a time representing the local date and time specified by the given table.\nThis table must have fields <code>year</code>, <code>month</code>, and <code>day</code>,\nand may have fields\n<code>hour</code> (default is 12),\n<code>min</code> (default is 0),\n<code>sec</code> (default is 0),\nand <code>isdst</code> (default is <b>nil</b>).\nOther fields are ignored.\nFor a description of these fields, see the <a href=\"#pdf-os.date\"><code>os.date</code></a> function.","args":["table"]},{"url":"","name":"os.tmpname","type":12,"desc":"Returns a string with a file name that can\nbe used for a temporary file.\nThe file must be explicitly opened before its use\nand explicitly removed when no longer needed.","args":[""]},{"url":"","name":"package","type":3,"desc":"The package library provides basic\nfacilities for loading modules in Lua.\nIt exports one function directly in the global environment:\n<a href=\"#pdf-require\"><code>require</code></a>.\nEverything else is exported in a table <a name=\"pdf-package\"><code>package</code></a>."},{"url":"","name":"package.config","type":3,"desc":"A string describing some compile-time configurations for packages.\nThis string is a sequence of lines:\n\n<ul"},{"url":"","name":"package.cpath","type":3,"desc":"The path used by <a href=\"#pdf-require\"><code>require</code></a> to search for a C&nbsp;loader."},{"url":"","name":"package.loaded","type":3,"desc":"A table used by <a href=\"#pdf-require\"><code>require</code></a> to control which\nmodules are already loaded.\nWhen you require a module <code>modname</code> and\n<code>package.loaded[modname]</code> is not false,\n<a href=\"#pdf-require\"><code>require</code></a> simply returns the value stored there."},{"url":"","name":"package.loadlib","type":12,"desc":"Dynamically links the host program with the C&nbsp;library <code>libname</code>.","args":["libname","funcname"]},{"url":"","name":"package.path","type":3,"desc":"The path used by <a href=\"#pdf-require\"><code>require</code></a> to search for a Lua loader."},{"url":"","name":"package.preload","type":3,"desc":"A table to store loaders for specific modules\n(see <a href=\"#pdf-require\"><code>require</code></a>)."},{"url":"","name":"package.searchers","type":3,"desc":"A table used by <a href=\"#pdf-require\"><code>require</code></a> to control how to load modules."},{"url":"","name":"package.searchpath","type":12,"desc":"Searches for the given <code>name</code> in the given <code>path</code>.","args":["name","path","sep","rep"]},{"url":"","name":"string","type":3,"desc":"This library provides generic functions for string manipulation,\nsuch as finding and extracting substrings, and pattern matching.\nWhen indexing a string in Lua, the first character is at position&nbsp;1\n(not at&nbsp;0, as in C).\nIndices are allowed to be negative and are interpreted as indexing backwards,\nfrom the end of the string.\nThus, the last character is at position -1, and so on."},{"url":"","name":"string.byte","type":12,"desc":"Returns the internal numeric codes of the characters <code>s[i]</code>,\n<code>s[i+1]</code>, ..., <code>s[j]</code>.\nThe default value for <code>i</code> is&nbsp;1;\nthe default value for <code>j</code> is&nbsp;<code>i</code>.\nThese indices are corrected\nfollowing the same rules of function <a href=\"#pdf-string.sub\"><code>string.sub</code></a>.","args":["s","i","j"]},{"url":"","name":"string.char","type":12,"desc":"Receives zero or more integers.\nReturns a string with length equal to the number of arguments,\nin which each character has the internal numeric code equal\nto its corresponding argument.","args":["..."]},{"url":"","name":"string.dump","type":12,"desc":"Returns a string containing a binary representation\n(a <em>binary chunk</em>)\nof the given function,\nso that a later <a href=\"#pdf-load\"><code>load</code></a> on this string returns\na copy of the function (but with new upvalues).\nIf <code>strip</code> is a true value,\nthe binary representation may not include all debug information\nabout the function,\nto save space.","args":["function","strip"]},{"url":"","name":"string.find","type":12,"desc":"Looks for the first match of\n<code>pattern</code> (see <a href=\"#6.4.1\">&sect;6.4.1</a>) in the string <code>s</code>.\nIf it finds a match, then <code>find</code> returns the indices of&nbsp;<code>s</code>\nwhere this occurrence starts and ends;\notherwise, it returns <b>nil</b>.\nA third, optional numeric argument <code>init</code> specifies\nwhere to start the search;\nits default value is&nbsp;1 and can be negative.\nA value of <b>true</b> as a fourth, optional argument <code>plain</code>\nturns off the pattern matching facilities,\nso the function does a plain \"find substring\" operation,\nwith no characters in <code>pattern</code> being considered magic.\nNote that if <code>plain</code> is given, then <code>init</code> must be given as well.","args":["s","pattern","init","plain"]},{"url":"","name":"string.format","type":12,"desc":"Returns a formatted version of its variable number of arguments\nfollowing the description given in its first argument (which must be a string).\nThe format string follows the same rules as the ISO&nbsp;C function <code>sprintf</code>.\nThe only differences are that the options/modifiers\n<code>*</code>, <code>h</code>, <code>L</code>, <code>l</code>, <code>n</code>,\nand <code>p</code> are not supported\nand that there is an extra option, <code>q</code>.","args":["formatstring","..."]},{"url":"","name":"string.gmatch","type":12,"desc":"Returns an iterator function that,\neach time it is called,\nreturns the next captures from <code>pattern</code> (see <a href=\"#6.4.1\">&sect;6.4.1</a>)\nover the string <code>s</code>.\nIf <code>pattern</code> specifies no captures,\nthen the whole match is produced in each call.","args":["s","pattern"]},{"url":"","name":"string.gsub","type":12,"desc":"Returns a copy of <code>s</code>\nin which all (or the first <code>n</code>, if given)\noccurrences of the <code>pattern</code> (see <a href=\"#6.4.1\">&sect;6.4.1</a>) have been\nreplaced by a replacement string specified by <code>repl</code>,\nwhich can be a string, a table, or a function.\n<code>gsub</code> also returns, as its second value,\nthe total number of matches that occurred.\nThe name <code>gsub</code> comes from <em>Global SUBstitution</em>.","args":["s","pattern","repl","n"]},{"url":"","name":"string.len","type":12,"desc":"Receives a string and returns its length.\nThe empty string <code>\"\"</code> has length 0.\nEmbedded zeros are counted,\nso <code>\"a\\000bc\\000\"</code> has length 5.","args":["s"]},{"url":"","name":"string.lower","type":12,"desc":"Receives a string and returns a copy of this string with all\nuppercase letters changed to lowercase.\nAll other characters are left unchanged.\nThe definition of what an uppercase letter is depends on the current locale.","args":["s"]},{"url":"","name":"string.match","type":12,"desc":"Looks for the first <em>match</em> of\n<code>pattern</code> (see <a href=\"#6.4.1\">&sect;6.4.1</a>) in the string <code>s</code>.\nIf it finds one, then <code>match</code> returns\nthe captures from the pattern;\notherwise it returns <b>nil</b>.\nIf <code>pattern</code> specifies no captures,\nthen the whole match is returned.\nA third, optional numeric argument <code>init</code> specifies\nwhere to start the search;\nits default value is&nbsp;1 and can be negative.","args":["s","pattern","init"]},{"url":"","name":"string.pack","type":12,"desc":"Returns a binary string containing the values <code>v1</code>, <code>v2</code>, etc.\npacked (that is, serialized in binary form)\naccording to the format string <code>fmt</code> (see <a href=\"#6.4.2\">&sect;6.4.2</a>).","args":["fmt","v1","v2","..."]},{"url":"","name":"string.packsize","type":12,"desc":"Returns the size of a string resulting from <a href=\"#pdf-string.pack\"><code>string.pack</code></a>\nwith the given format.\nThe format string cannot have the variable-length options\n'<code>s</code>' or '<code>z</code>' (see <a href=\"#6.4.2\">&sect;6.4.2</a>).","args":["fmt"]},{"url":"","name":"string.rep","type":12,"desc":"Returns a string that is the concatenation of <code>n</code> copies of\nthe string <code>s</code> separated by the string <code>sep</code>.\nThe default value for <code>sep</code> is the empty string\n(that is, no separator).\nReturns the empty string if <code>n</code> is not positive.","args":["s","n","sep"]},{"url":"","name":"string.reverse","type":12,"desc":"Returns a string that is the string <code>s</code> reversed.","args":["s"]},{"url":"","name":"string.sub","type":12,"desc":"Returns the substring of <code>s</code> that\nstarts at <code>i</code>  and continues until <code>j</code>;\n<code>i</code> and <code>j</code> can be negative.\nIf <code>j</code> is absent, then it is assumed to be equal to -1\n(which is the same as the string length).\nIn particular,\nthe call <code>string.sub(s,1,j)</code> returns a prefix of <code>s</code>\nwith length <code>j</code>,\nand <code>string.sub(s, -i)</code> (for a positive <code>i</code>)\nreturns a suffix of <code>s</code>\nwith length <code>i</code>.","args":["s","i","j"]},{"url":"","name":"string.unpack","type":12,"desc":"Returns the values packed in string <code>s</code> (see <a href=\"#pdf-string.pack\"><code>string.pack</code></a>)\naccording to the format string <code>fmt</code> (see <a href=\"#6.4.2\">&sect;6.4.2</a>).\nAn optional <code>pos</code> marks where\nto start reading in <code>s</code> (default is 1).\nAfter the read values,\nthis function also returns the index of the first unread byte in <code>s</code>.","args":["fmt","s","pos"]},{"url":"","name":"string.upper","type":12,"desc":"Receives a string and returns a copy of this string with all\nlowercase letters changed to uppercase.\nAll other characters are left unchanged.\nThe definition of what a lowercase letter is depends on the current locale.","args":["s"]},{"url":"","name":"table","type":3,"desc":"This library provides generic functions for table manipulation.\nIt provides all its functions inside the table <a name=\"pdf-table\"><code>table</code></a>."},{"url":"","name":"table.concat","type":12,"desc":"Given a list where all elements are strings or numbers,\nreturns the string <code>list[i]..sep..list[i+1] &middot;&middot;&middot; sep..list[j]</code>.\nThe default value for <code>sep</code> is the empty string,\nthe default for <code>i</code> is 1,\nand the default for <code>j</code> is <code>#list</code>.\nIf <code>i</code> is greater than <code>j</code>, returns the empty string.","args":["list","sep","i","j"]},{"url":"","name":"table.insert","type":12,"desc":"Inserts element <code>value</code> at position <code>pos</code> in <code>list</code>,\nshifting up the elements\n<code>list[pos], list[pos+1], &middot;&middot;&middot;, list[#list]</code>.\nThe default value for <code>pos</code> is <code>#list+1</code>,\nso that a call <code>table.insert(t,x)</code> inserts <code>x</code> at the end\nof list <code>t</code>.","args":["list","pos","value"]},{"url":"","name":"table.move","type":12,"desc":"Moves elements from table <code>a1</code> to table <code>a2</code>,\nperforming the equivalent to the following\nmultiple assignment:\n<code>a2[t],&middot;&middot;&middot; = a1[f],&middot;&middot;&middot;,a1[e]</code>.\nThe default for <code>a2</code> is <code>a1</code>.\nThe destination range can overlap with the source range.\nThe number of elements to be moved must fit in a Lua integer.","args":["a1","f","e","t,a2"]},{"url":"","name":"table.pack","type":12,"desc":"Returns a new table with all arguments stored into keys 1, 2, etc.\nand with a field \"<code>n</code>\" with the total number of arguments.\nNote that the resulting table may not be a sequence.","args":["..."]},{"url":"","name":"table.remove","type":12,"desc":"Removes from <code>list</code> the element at position <code>pos</code>,\nreturning the value of the removed element.\nWhen <code>pos</code> is an integer between 1 and <code>#list</code>,\nit shifts down the elements\n<code>list[pos+1], list[pos+2], &middot;&middot;&middot;, list[#list]</code>\nand erases element <code>list[#list]</code>;\nThe index <code>pos</code> can also be 0 when <code>#list</code> is 0,\nor <code>#list + 1</code>;\nin those cases, the function erases the element <code>list[pos]</code>.","args":["list","pos"]},{"url":"","name":"table.sort","type":12,"desc":"Sorts list elements in a given order, <em>in-place</em>,\nfrom <code>list[1]</code> to <code>list[#list]</code>.\nIf <code>comp</code> is given,\nthen it must be a function that receives two list elements\nand returns true when the first element must come\nbefore the second in the final order\n(so that, after the sort,\n<code>i &lt; j</code> implies <code>not comp(list[j],list[i])</code>).\nIf <code>comp</code> is not given,\nthen the standard Lua operator <code>&lt;</code> is used instead.","args":["list","comp"]},{"url":"","name":"table.unpack","type":12,"desc":"Returns the elements from the given list.\nThis function is equivalent to\n\n<pre>\n     return list[i], list[i+1], &middot;&middot;&middot;, list[j]\n</pre><p>\nBy default, <code>i</code> is&nbsp;1 and <code>j</code> is <code>#list</code>","args":["list","i","j"]},{"url":"","name":"utf8","type":3,"desc":"This library provides basic support for UTF-8 encoding.\nIt provides all its functions inside the table <a name=\"pdf-utf8\"><code>utf8</code></a>.\nThis library does not provide any support for Unicode other\nthan the handling of the encoding.\nAny operation that needs the meaning of a character,\nsuch as character classification, is outside its scope."},{"url":"","name":"utf8.char","type":12,"desc":"Receives zero or more integers,\nconverts each one to its corresponding UTF-8 byte sequence\nand returns a string with the concatenation of all these sequences.","args":["..."]},{"url":"","name":"utf8.charpattern","type":3,"desc":"The pattern (a string, not a function) \"<code>[\\0-\\x7F\\xC2-\\xF4][\\x80-\\xBF]*</code>\"\n(see <a href=\"#6.4.1\">&sect;6.4.1</a>),\nwhich matches exactly one UTF-8 byte sequence,\nassuming that the subject is a valid UTF-8 string."},{"url":"","name":"utf8.codepoint","type":12,"desc":"Returns the codepoints (as integers) from all characters in <code>s</code>\nthat start between byte position <code>i</code> and <code>j</code> (both included).\nThe default for <code>i</code> is 1 and for <code>j</code> is <code>i</code>.\nIt raises an error if it meets any invalid byte sequence.","args":["s","i","j"]},{"url":"","name":"utf8.codes","type":12,"desc":"Returns values so that the construction\n\n<pre>\n     for p, c in utf8.codes(s) do <em>body</em> end\n</pre><p>\nwill iterate over all characters in string <code>s</code>,\nwith <code>p</code> being the position (in bytes) and <code>c</code> the code point\nof each character.\nIt raises an error if it meets any invalid byte sequence","args":["s"]},{"url":"","name":"utf8.len","type":12,"desc":"Returns the number of UTF-8 characters in string <code>s</code>\nthat start between positions <code>i</code> and <code>j</code> (both inclusive).\nThe default for <code>i</code> is 1 and for <code>j</code> is -1.\nIf it finds any invalid byte sequence,\nreturns a false value plus the position of the first invalid byte.","args":["s","i","j"]},{"url":"","name":"utf8.offset","type":12,"desc":"Returns the position (in bytes) where the encoding of the\n<code>n</code>-th character of <code>s</code>\n(counting from position <code>i</code>) starts.\nA negative <code>n</code> gets characters before position <code>i</code>.\nThe default for <code>i</code> is 1 when <code>n</code> is non-negative\nand <code>#s + 1</code> otherwise,\nso that <code>utf8.offset(s, -n)</code> gets the offset of the\n<code>n</code>-th character from the end of the string.\nIf the specified character is neither in the subject\nnor right after its end,\nthe function returns <b>nil</b>.","args":["s","n","i"]}]